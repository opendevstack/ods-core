// BuildConfig environment variables
def odsNamespace = env.ODS_NAMESPACE ?: 'ods'
def odsImageTag = env.ODS_IMAGE_TAG ?: 'latest'
def projectId = env.PROJECT_ID

// Jenkins DeploymentConfig environment variables
def dockerRegistry
node {
  dockerRegistry = env.DOCKER_REGISTRY
}

def conts = containerTemplate(
  name: 'jnlp',
  image: "${dockerRegistry}/${odsNamespace}/jenkins-agent-base:${odsImageTag}",
  workingDir: '/tmp',
  alwaysPullImage: true,
  args: ''
)
def podLabel = "delete-projects-${projectId}";

podTemplate(
  label: podLabel,
  cloud: 'openshift',
  containers: [conts],
  volumes: [],
  serviceAccount: 'jenkins'
) {
  node(podLabel) {
    stage('delete projects') {
      if (!projectId) {
        error ("No project ID passed - aborting")
      }
      currentBuild.description = "ODS Build #${env.BUILD_NUMBER} delete project: ${projectId}"
      def exists = sh(
          script: "oc project ${projectId}-cd &> /dev/null",
          label: "Check if OpenShift project '${projectId}-cd' exists",
          returnStatus: true
      ) == 0
      if (!exists) {
          error ("Project '${projectId}' does not exist! - aborting")
      }
      sh "oc delete project ${projectId}-cd --now=true --wait=true"
      sh "oc delete project ${projectId}-dev --now=true --wait=true"
      sh "oc delete project ${projectId}-test --now=true --wait=true"

      echo "ODS Project ${projectId} successfully deleted"
    }
  }
}
