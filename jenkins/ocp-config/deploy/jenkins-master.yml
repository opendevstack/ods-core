apiVersion: v1
kind: Template
labels:
  template: ods-jenkins-template
parameters:
- name: ODS_IMAGE_TAG
  description: OpenDevStack image tag to use.
  required: true
- name: OPENSHIFT_APPS_BASEDOMAIN
  required: true
- name: JENKINS_SERVICE_NAME
  value: jenkins
- name: JENKINS_JNLP_SERVICE_NAME
  value: jenkins-jnlp
- name: STORAGE_CLASS_DATA
  value: ""
- name: JENKINS_ENABLE_OAUTH
  value: "true"
- name: JENKINS_MEMORY_LIMIT
  value: 5Gi
- name: JENKINS_MEMORY_REQUEST
  value: 4Gi
- name: JENKINS_CPU_LIMIT
  value: "1"
- name: JENKINS_CPU_REQUEST
  value: 100m
- name: JENKINS_VOLUME_CAPACITY
  value: 5Gi
- name: JENKINS_JAVA_GC_OPTS
  value: "-server -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent -XX:+ParallelRefProcEnabled -XX:+UseStringDeduplication -XX:+UnlockExperimentalVMOptions -XX:G1NewSizePercent=20 -XX:+UnlockDiagnosticVMOptions -XX:G1SummarizeRSetStatsPeriod=1"
- name: JENKINS_JAVA_MAX_HEAP_PARAM
  value: "-Xmx4g"
- name: JENKINS_CONTAINER_HEAP_PERCENT
  value: "1"
- name: ODS_NAMESPACE
  value: ods
- name: TAILOR_NAMESPACE
  required: true
- name: CD_USER_ID_B64
  required: true
- name: CD_USER_PWD_B64
  required: true
- name: NEXUS_URL
  required: true
- name: NEXUS_USERNAME
  required: true
- name: NEXUS_PASSWORD_B64
  required: true
- name: JIRA_URL
  required: true
- name: JENKINS_HOME
  value: /var/lib/jenkins
- name: SONARQUBE_URL
  required: true
- name: SONAR_AUTH_TOKEN_B64
  required: true
- name: SHARED_LIBRARY_REPOSITORY
  required: true
- name: DOCKER_REGISTRY
  required: true
- name: BITBUCKET_URL
  required: true
- name: REPO_BASE
  required: true
objects:
- apiVersion: v1
  data:
    password: '${CD_USER_PWD_B64}'
    username: '${CD_USER_ID_B64}'
  kind: Secret
  metadata:
    name: cd-user-with-password
    labels:
      template: ods-jenkins-template
  type: kubernetes.io/basic-auth
- apiVersion: v1
  data:
    auth-token: '${SONAR_AUTH_TOKEN_B64}'
  kind: Secret
  metadata:
    name: sonarqube
    labels:
      template: ods-jenkins-template
  type: opaque
- apiVersion: v1
  data:
    password: '${NEXUS_PASSWORD_B64}'
  kind: Secret
  metadata:
    labels:
      template: ods-jenkins-template
      app: jenkins
    name: nexus
  type: opaque
- apiVersion: v1
  kind: Route
  metadata:
    creationTimestamp: null
    name: '${JENKINS_SERVICE_NAME}'
    labels:
      template: ods-jenkins-template
      app: jenkins-master
  spec:
    host: jenkins-${TAILOR_NAMESPACE}${OPENSHIFT_APPS_BASEDOMAIN}
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: '${JENKINS_SERVICE_NAME}'
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    finalizers:
    - kubernetes.io/pvc-protection
    name: '${JENKINS_SERVICE_NAME}'
    labels:
      template: ods-jenkins-template
      app: jenkins-master
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: '${JENKINS_VOLUME_CAPACITY}'
    storageClassName: '${STORAGE_CLASS_DATA}'
    volumeMode: Filesystem
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: '${JENKINS_SERVICE_NAME}'
    labels:
      template: ods-jenkins-template
      app: jenkins-master
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: '${JENKINS_SERVICE_NAME}'
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: '${JENKINS_SERVICE_NAME}'
      spec:
        containers:
        - env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: '${JENKINS_ENABLE_OAUTH}'
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: 'true'
            - name: KUBERNETES_MASTER
              value: 'https://kubernetes.default:443'
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: 'true'
            - name: JNLP_SERVICE_NAME
              value: '${JENKINS_JNLP_SERVICE_NAME}'
            - name: JAVA_GC_OPTS
              value: '${JENKINS_JAVA_GC_OPTS}'
            - name: JAVA_MAX_HEAP_PARAM
              value: '${JENKINS_JAVA_MAX_HEAP_PARAM}'
            - name: CONTAINER_HEAP_PERCENT
              value: '${JENKINS_CONTAINER_HEAP_PERCENT}'
            - name: NEXUS_URL
              value: '${NEXUS_URL}'
            - name: NEXUS_USERNAME
              value: '${NEXUS_USERNAME}'
            - name: NEXUS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: nexus
            - name: JIRA_URL
              value: '${JIRA_URL}'
            - name: JENKINS_HOME
              value: '${JENKINS_HOME}'
            - name: COPY_REFERENCE_FILE_LOG
              value: '${JENKINS_HOME}/copy_reference_file.log'
            - name: SONAR_SERVER_URL
              value: '${SONARQUBE_URL}'
            - name: SONAR_SERVER_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: auth-token
                  name: sonarqube
            - name: SHARED_LIBRARY_REPOSITORY
              value: '${SHARED_LIBRARY_REPOSITORY}'
            - name: DOCKER_REGISTRY
              value: '${DOCKER_REGISTRY}'
            - name: BITBUCKET_URL
              value: '${BITBUCKET_URL}'
          image: '${DOCKER_REGISTRY}/${ODS_NAMESPACE}/jenkins-master:${ODS_IMAGE_TAG}'
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 30
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: ${JENKINS_CPU_LIMIT}
              memory: ${JENKINS_MEMORY_LIMIT}
            requests:
              cpu: ${JENKINS_CPU_REQUEST}
              memory: ${JENKINS_MEMORY_REQUEST}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: '${JENKINS_HOME}'
              name: '${JENKINS_SERVICE_NAME}-data'
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: '${JENKINS_SERVICE_NAME}'
        serviceAccountName: '${JENKINS_SERVICE_NAME}'
        terminationGracePeriodSeconds: 30
        volumes:
          - name: '${JENKINS_SERVICE_NAME}-data'
            persistentVolumeClaim:
              claimName: '${JENKINS_SERVICE_NAME}'
    test: false
    triggers:
      - type: ConfigChange
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: >-
        {"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"${JENKINS_SERVICE_NAME}"}}
    name: '${JENKINS_SERVICE_NAME}'
    labels:
      template: ods-jenkins-template
- apiVersion: authorization.openshift.io/v1
  kind: RoleBinding
  metadata:
    name: '${JENKINS_SERVICE_NAME}_edit'
    labels:
      template: ods-jenkins-template
  roleRef:
    name: edit
  subjects:
    - kind: ServiceAccount
      name: '${JENKINS_SERVICE_NAME}'
      namespace: '${TAILOR_NAMESPACE}'
- apiVersion: v1
  kind: Service
  metadata:
    name: '${JENKINS_JNLP_SERVICE_NAME}'
    labels:
      template: ods-jenkins-template
  spec:
    ports:
      - name: agent
        port: 50000
        protocol: TCP
        targetPort: 50000
    selector:
      name: '${JENKINS_SERVICE_NAME}'
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "${JENKINS_JNLP_SERVICE_NAME}", "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
    creationTimestamp: null
    name: '${JENKINS_SERVICE_NAME}'
    labels:
      template: ods-jenkins-template
      app: jenkins-master
  spec:
    ports:
      - name: web
        port: 80
        protocol: TCP
        targetPort: 8080
    selector:
      name: '${JENKINS_SERVICE_NAME}'
    sessionAffinity: None
    type: ClusterIP
