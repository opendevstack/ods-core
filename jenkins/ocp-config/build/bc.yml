apiVersion: v1
kind: Template
metadata:
  name: jenkins
objects:
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: jenkins-master
    labels:
      app: jenkins
  spec:
    nodeSelector: null
    postCommit: {}
    resources: {}
    runPolicy: Serial
    triggers: []
    source:
      type: Git
      contextDir: jenkins/master
      git:
        ref: ${ODS_GIT_REF}
        uri: ${REPO_BASE}/opendevstack/ods-core.git
      sourceSecret:
        name: cd-user-token
    strategy:
      type: Docker
      dockerStrategy:
        env:
          - name: APP_DNS
            value: ${APP_DNS}
          - name: APP_DNS_PORT
            value: ${APP_DNS_PORT}
          - name: TARGET_HOSTS
            value: ${TARGET_HOSTS}
          - name: ODS_GIT_REF
            value: ${ODS_GIT_REF}
          - name: ODS_IMAGE_TAG
            value: ${ODS_IMAGE_TAG}
          - name: SONAR_EDITION
            value: ${SONAR_EDITION}
          - name: SONAR_VERSION
            value: ${SONAR_VERSION}
        from:
          kind: ImageStreamTag
          name: jenkins:2
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: 'jenkins-master:${ODS_IMAGE_TAG}'
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: jenkins-slave-base
    labels:
      app: jenkins
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: 'jenkins-slave-base:${ODS_IMAGE_TAG}'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: jenkins/slave-base
      git:
        ref: ${ODS_GIT_REF}
        uri: ${REPO_BASE}/opendevstack/ods-core.git
      sourceSecret:
        name: cd-user-token
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: ${JENKINS_AGENT_BASE_IMAGE}
        env:
          - name: APP_DNS
            value: ${APP_DNS}
          - name: APP_DNS_PORT
            value: ${APP_DNS_PORT}
          - name: SNYK_DISTRIBUTION_URL
            value: ${JENKINS_AGENT_BASE_SNYK_DISTRIBUTION_URL}
          - name: TARGET_HOSTS
            value: ${TARGET_HOSTS}
        from:
          kind: DockerImage
          name: ${JENKINS_AGENT_BASE_FROM_IMAGE}
      type: Docker
    triggers: []
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: jenkins-webhook-proxy
    labels:
      app: jenkins
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'jenkins-webhook-proxy:${ODS_IMAGE_TAG}'
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: jenkins/webhook-proxy
      git:
        ref: ${ODS_GIT_REF}
        uri: ${REPO_BASE}/opendevstack/ods-core.git
      sourceSecret:
        name: cd-user-token
      type: Git
    strategy:
      dockerStrategy: {}
      type: Docker
    successfulBuildsHistoryLimit: 5
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    triggers: []
parameters:
- name: ODS_IMAGE_TAG
  description: OpenDevStack image tag to use.
  required: true
- name: ODS_GIT_REF
  description: Git ref to use for source code.
  required: true
- name: REPO_BASE
  description: repository base url. In case bitbucket is used, needs to include /scm - so it's the path in front on opendevstack/..
  required: true
- name: JENKINS_AGENT_BASE_IMAGE
  description: configuration which agent dockerfile to use, either .centos7 or .rhel7
- name: JENKINS_AGENT_BASE_FROM_IMAGE
  description: configuration which agent base to use, for rhel7 use registry.access.redhat.com/openshift3/jenkins-slave-base-rhel7
- name: APP_DNS
  description: OpenShift application base dns - used for grabbing the root ca and adding into the agent
- name: APP_DNS_PORT
  description: OpenShift application base dns port - used for grabbing the root ca and adding into the agent
- name: JENKINS_AGENT_BASE_SNYK_DISTRIBUTION_URL
  description: optional uri that points to the snyk binary distribution (i.e. https://github.com/snyk/snyk/releases/download/v1.180.1/snyk-linux)
- name: TARGET_HOSTS
  description: if you have multiple DNS with different root ca, add them here seperated by ';'. They are added to jenkins master
- name: SONAR_EDITION
  description: SonarQube edition. One of "community", "developer", "enterprise" or "datacenter".
- name: SONAR_VERSION
  description: SonarQube version, e.g. "7.9"
