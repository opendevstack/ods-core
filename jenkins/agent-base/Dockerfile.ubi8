FROM quay.io/openshift/origin-jenkins-agent-base

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# SONAR_SCANNER_VERSION above 4.8.x require java 17 to run.
ENV SONAR_SCANNER_VERSION=4.8.1.3023 \
    CNES_REPORT_VERSION=4.2.0 \
    TAILOR_VERSION=1.3.4 \
    SOPS_VERSION=3.7.3 \
    HELM_VERSION=3.11.3 \
    HELM_PLUGIN_DIFF_VERSION=3.8.1 \
    HELM_PLUGIN_SECRETS_VERSION=4.2.2 \
    GIT_LFS_VERSION=3.3.0 \
    TRIVY_VERSION=0.42.0 \
    JAVA_GC_OPTS="-XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90"

ARG APP_DNS
ARG SNYK_DISTRIBUTION_URL
ARG AQUASEC_SCANNERCLI_URL

# Add UBI repositories.
COPY yum.repos.d/ubi.repo /etc/yum.repos.d/ubi.repo

COPY ensure_java_jre_is_adequate.sh /usr/local/bin/
RUN cd /etc/yum.repos.d && rm -f localdev-* ci-rpm-mirrors.repo \
    && ensure_java_jre_is_adequate.sh \
    && yum -y install make glibc-langpack-en openssl \
    && yum -y update \
    && yum clean all \
    && rm -rf /var/cache/yum/*

#
# WARNING: We do not install java 8 nor java 11 in this image because they are already intalled in it.
#

# Copy use java scripts.
COPY use-j*.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/use-j*.sh && \
    chmod ugo+s /usr/local/bin/use-j*.sh && \
    sh -c 'chmod ugo+s $(which alternatives)' && \
    ls -la /usr/local/bin/use-j*.sh && \
    echo "--- STARTS JDK 11 TESTS ---" && \
    use-j11.sh && \
    echo "--- ENDS JDK 11 TESTS ---"

COPY ./import_certs.sh /usr/local/bin/import_certs.sh
COPY ./fix_java_certs_permissions.sh /usr/local/bin/fix_java_certs_permissions.sh
RUN import_certs.sh && fix_java_certs_permissions.sh

# Install Sonar Scanner.
RUN cd /tmp \
    && curl -sSLO https://repo1.maven.org/maven2/org/sonarsource/scanner/cli/sonar-scanner-cli/${SONAR_SCANNER_VERSION}/sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip \
    && unzip sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip \
    && mv sonar-scanner-${SONAR_SCANNER_VERSION} /usr/local/sonar-scanner-cli \
    && rm -rf sonar-scanner-cli-${SONAR_SCANNER_VERSION}.zip \
    && /usr/local/sonar-scanner-cli/bin/sonar-scanner --version
ENV PATH=/usr/local/sonar-scanner-cli/bin:$PATH

# Add sq cnes report jar.
RUN cd /tmp \
    && curl -sSL https://github.com/cnescatlab/sonar-cnes-report/releases/download/${CNES_REPORT_VERSION}/sonar-cnes-report-${CNES_REPORT_VERSION}.jar -o cnesreport.jar \
    && mkdir /usr/local/cnes \
    && mv cnesreport.jar /usr/local/cnes/cnesreport.jar \
    && chmod 777 /usr/local/cnes/cnesreport.jar

# Install Tailor.
RUN cd /tmp \
    && curl -sSLO https://github.com/opendevstack/tailor/releases/download/v${TAILOR_VERSION}/tailor-linux-amd64 \
    && mv tailor-linux-amd64 /usr/local/bin/tailor \
    && chmod a+x /usr/local/bin/tailor \
    && tailor version

# Install Helm.
RUN cd /tmp \
    && dnf install -y https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-${SOPS_VERSION}-1.x86_64.rpm \
    && mkdir -p /tmp/helm \
    && curl -sSLO https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz \
    && tar -zxvf helm-v${HELM_VERSION}-linux-amd64.tar.gz -C /tmp/helm \
    && mv /tmp/helm/linux-amd64/helm /usr/local/bin/helm \
    && chmod a+x /usr/local/bin/helm \
    && helm version \
    && helm env \
    && helm plugin install https://github.com/databus23/helm-diff --version v${HELM_PLUGIN_DIFF_VERSION} \
    && helm plugin install https://github.com/jkroepke/helm-secrets --version v${HELM_PLUGIN_SECRETS_VERSION} \
    && sops --version \
    && rm -rf /tmp/helm

# Install GIT-LFS extension https://git-lfs.github.com/.
RUN cd /tmp \
    && mkdir -p /tmp/git-lfs \
    && curl -sSLO https://github.com/git-lfs/git-lfs/releases/download/v${GIT_LFS_VERSION}/git-lfs-linux-amd64-v${GIT_LFS_VERSION}.tar.gz \
    && tar -zxvf git-lfs-linux-amd64-v${GIT_LFS_VERSION}.tar.gz -C /tmp/git-lfs \
    && bash /tmp/git-lfs/git-lfs-${GIT_LFS_VERSION}/install.sh \
    && git lfs version \
    && rm -rf /tmp/git-lfs*

# Optionally install snyk.
RUN if [ -z $SNYK_DISTRIBUTION_URL ] ; then echo 'Skipping snyk installation!' ; else echo 'Installing snyk... getting binary from' $SNYK_DISTRIBUTION_URL \
    && curl -sSL $SNYK_DISTRIBUTION_URL --output snyk \
    && mv snyk /usr/local/bin \
    && chmod +rwx /usr/local/bin/snyk \
    && mkdir -p $HOME/.config/configstore/ \
    && chmod -R g+rw $HOME/.config/configstore/ \
    && echo 'Snyk CLI version:' \
    && snyk --version \
    && echo 'Snyk installation completed!'; \
    fi

# Optionally install Aquasec.
RUN if [ -z $AQUASEC_SCANNERCLI_URL ] ; then echo 'Skipping AquaSec installation!' ; else echo 'Installing AquaSec... getting binary from' $AQUASEC_SCANNERCLI_URL \
    && curl -sSL $AQUASEC_SCANNERCLI_URL --output aquasec \
    && mv aquasec /usr/local/bin \
    && chmod +rwx /usr/local/bin/aquasec \
    && echo 'AquaSec CLI version:' \
    && aquasec version \
    && echo 'AquaSec installation completed!'; \
    fi

# Install Trivy.
RUN curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v$TRIVY_VERSION \
    && echo 'Trivy CLI version:' \
    && trivy version

# Set java proxy var.
COPY set_java_proxy.sh /tmp/set_java_proxy.sh
RUN . /tmp/set_java_proxy.sh && echo $JAVA_OPTS

# Customize entrypoint.
COPY fix_openshift_run_jnlp_client.sh /usr/local/bin/fix_openshift_run_jnlp_client.sh
RUN mv /usr/local/bin/run-jnlp-client /usr/local/bin/openshift-run-jnlp-client \
    && fix_openshift_run_jnlp_client.sh /usr/local/bin/openshift-run-jnlp-client

COPY ods-run-jnlp-client.sh /usr/local/bin/run-jnlp-client

# Add skopeo.
RUN yum install -y skopeo \
    && yum clean all \
    && rm -rf /var/cache/yum/* \
    && skopeo --version

# Fix permissions.
RUN mkdir -p /home/jenkins/.config && chmod -R g+w /home/jenkins/.config \
    && mkdir -p /home/jenkins/.cache && chmod -R g+w /home/jenkins/.cache \
    && mkdir -p /home/jenkins/.sonar && chmod -R g+w /home/jenkins/.sonar \
    && mkdir -p /tmp/aqua && chmod -R g+w /tmp/aqua

