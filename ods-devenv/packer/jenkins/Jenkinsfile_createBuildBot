def buildBadge = addEmbeddableBadgeConfiguration(id: "odsbuild", status: "started")

pipeline {

    parameters {
        string(name: 'ODS_BRANCH', defaultValue: 'experimental', description: "ods-core branch to checkout.")
    }

    environment {
        // ODS_BRANCH = "experimental"
        JOB_NAME = "ods-build-${ODS_BRANCH}-branch"
        BUILD_FOLDER = "${WORKSPACE_TMP}/${BUILD_NUMBER}"
        instance_type = "t2.micro"
    }

    agent {
        node('edpBox')
    }


    options {
        ansiColor('xterm')
    }


    stages {
        stage('ODS BuildBot: running AMI build!') {
            steps {
                script {
                    try {
                        echoInfo "Setting build badge status!"
                        buildBadge.setStatus("running")

                        echoInfo "Started ODS AMI build number '${BUILD_NUMBER}' for branch: '${ODS_BRANCH}'"
                        echoInfo "BUILD_FOLDER = '${BUILD_FOLDER}'"
                        echoInfo "... logging some environment details"
                        sh 'whoami && pwd && ls -lart'
                        sh 'echo $PATH'
                        sh 'git version'

                        echoInfo "... create temp build folder"
                        sh 'mkdir -p ${BUILD_FOLDER}'
                        echoInfo "... cloning ods-core && checkout branch ${ODS_BRANCH}"
                        sh 'cd ${BUILD_FOLDER} && git clone https://github.com/opendevstack/ods-core.git && cd ods-core && git checkout ${ODS_BRANCH}'

                        echoInfo "... preparing temp build folder"
                        withCredentials([sshUserPrivateKey(credentialsId: "edp_slave_openshift_pub", keyFileVariable: 'ssh_public_key'),
                                         sshUserPrivateKey(credentialsId: "edp_slave_openshift_202205", keyFileVariable: 'ssh_private_key')]) {
                            sh 'cp ${ssh_public_key} ${BUILD_FOLDER}/jenkins.pub'
                            sh 'cp ${ssh_private_key} ${BUILD_FOLDER}/jenkins.priv'
                        }

                        withCredentials([usernamePassword(credentialsId: 'registry_credentials', usernameVariable: 'registry_user', passwordVariable: 'registry_token')]) {
                            withCredentials([[ $class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'awsID', accessKeyVariable: 'AWS_ACCESS_KEY_ID', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {
                                // This is safe, client and secret will be masked in the output
                                // echoInfo "aws client = $AWS_ACCESS_KEY_ID"
                                // echoInfo "aws secret = $AWS_SECRET_ACCESS_KEY"
                                echoInfo "... running packer build"

                                // For building BOXES (Initial version):
                                // sh 'export LOG_PATH=. && export PACKER_LOG=1 && export AWS_MAX_ATTEMPTS=400 && export AWS_POLL_DELAY_SECONDS=15 \
                                // && cd ${BUILD_FOLDER} && pwd && ls -lart && date && log_file="${LOG_PATH}/build_$(echo "${ODS_BRANCH}" | tr "/" "_")_$(date +%Y%m%dT%H%M%S).log" \
                                // && cd ods-core && time bash 2>&1 ods-devenv/packer/create_ods_box_image.sh --target create_ods_box_ami \
                                // --aws-access-key "$AWS_ACCESS_KEY_ID" --aws-secret-key "$AWS_SECRET_ACCESS_KEY" --ods-branch "${ODS_BRANCH}" --instance-type ${instance_type}'

                                // For building BOXES (Current version):
                                // set -x
                                // export LOG_PATH=. && export PACKER_LOG=1 && export AWS_MAX_ATTEMPTS=180 && export AWS_POLL_DELAY_SECONDS=60 && \
                                // cd ${BUILD_FOLDER} && pwd && ls -lart && source ${BUILD_FOLDER}/.buildbotrc && date && \
                                // log_file="${LOG_PATH}/build_$(echo "${ODS_BRANCH}" | tr "/" "_")_$(date +%Y%m%dT%H%M%S).log" && \
                                // cd ods-core && time bash 2>&1 ods-devenv/packer/create_ods_box_image.sh --target create_ods_box_ami \
                                //     --aws-access-key "$AWS_ACCESS_KEY_ID" --aws-secret-key "$AWS_SECRET_ACCESS_KEY" --ods-branch "${ODS_BRANCH}" \
                                //     --instance-type ${instance_type} --pub-key ${BUILD_FOLDER}/jenkins.pub --priv-key ${BUILD_FOLDER}/jenkins.priv

                                // For building buildBots (taken from documentation):
                                // export PACKER_LOG=1 && export AWS_MAX_ATTEMPTS=400 && export AWS_POLL_DELAY_SECONDS=15 && \
                                // source ~/opendevstack/ods-core/ods-devenv/buildbot/scripts/.buildbotrc && date && cd ~/opendevstack/ods-core && \
                                // time bash 2>&1 ods-devenv/packer/create_ods_box_image.sh --target create_ods_box_ami --aws-access-key "${aws_access_key}" \
                                // --aws-secret-key "${aws_secret_access_key}" --ods-branch "${branch}" --instance-type ${instance_type} \
                                // | tr "/" "_")_$(date +\%Y\%m\%dT\%H\%M\%S).log"

                                // Now the current version for building buildBots:
                                sh '''
                                    set -x
                                    export LOG_PATH=. && export PACKER_LOG=1 && export AWS_MAX_ATTEMPTS=180 && export AWS_POLL_DELAY_SECONDS=60 && \
                                    export log_path="${HOME}/logs" && export build_path="${HOME}/opendevstack/builds" &&
                                    export build_result_path="${HOME}/opendevstack/packer_build_result" &&
                                    export log_file="${LOG_PATH}/build_$(echo "${ODS_BRANCH}" | tr "/" "_")_$(date +%Y%m%dT%H%M%S).log" && \
                                    export branch="${ODS_BRANCH}" && export instance_type="t2.micro" &&
                                    date && \
                                    cd ods-core && time bash 2>&1 ods-devenv/packer/create_ods_box_image.sh --target create_buildBot_ami \
                                        --aws-access-key "$AWS_ACCESS_KEY_ID" --aws-secret-key "$AWS_SECRET_ACCESS_KEY" --ods-branch "${ODS_BRANCH}" \
                                        --instance-type ${instance_type} --pub-key ${BUILD_FOLDER}/jenkins.pub --priv-key ${BUILD_FOLDER}/jenkins.priv
                                '''
                            }
                        }

                        echoInfo "...done!"

                        buildBadge.setStatus("passing")

                    } catch (Exception err) {
                        buildBadge.setStatus("failing")

                        echoError "error: " + err
                        throw err
                    }
                }
            }
        }

    }
}

def echoInfo(msg){
    echo "\033[32m ${msg} \033[0m"
}

def echoError(msg){
    echo "\033[31m ${msg} \033[0m"
}
