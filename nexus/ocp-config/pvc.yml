apiVersion: v1
kind: Template
parameters:
- name: NEXUS_NAME
  value: nexus
- name: STORAGE_PROVISIONER
  description: storage class provisioner. For AWS this could be kubernetes.io/aws-ebs. Leave empty for local (e.g. vagrant) deployments
  value: ""
- name: STORAGE_CLASS_DATA
  description: storage class for data. For AWS this could be gp2. Leave empty for local (e.g. vagrant) deployments
  value: ""
- name: STORAGE_CLASS_BACKUP
  description: Storage class for data backup. For AWS this could be gp2-encrypted. Leave empty for local (e.g. vagrant) deployments
  value: ""
- name: NEXUS_DATA_CAPACITY
  value: 60Gi
- name: NEXUS_BACKUP_CAPACITY
  value: 10Gi
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: ${STORAGE_PROVISIONER}
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: ${NEXUS_NAME}
    name: nexus-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${NEXUS_DATA_CAPACITY}
    storageClassName: ${STORAGE_CLASS_DATA}
    volumeMode: Filesystem
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: ${STORAGE_PROVISIONER}
    finalizers:
    - kubernetes.io/pvc-protection
    labels:
      app: ${NEXUS_NAME}
    name: nexus-db-backup
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${NEXUS_BACKUP_CAPACITY}
    storageClassName: ${STORAGE_CLASS_BACKUP}
    volumeMode: Filesystem
